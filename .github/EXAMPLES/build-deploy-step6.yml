name: Trigger auto deployment

on:
  # 手動実行用トリガー
  workflow_dispatch:

env:
  CONTAINER_REGISTRY: 
  # Add envs
  RESOURCE_GROUP_NAME: 
  CONTAINERAPP_NAME: 
  # Add env for FrontEnd App only
  API_BASE_URL:

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set repository name to env
        run: | 
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_ENV

      # - name: Confirm if env have REPOSITORY_NAME
      #   run: |
      #     echo ${{ env.REPOSITORY_NAME }}

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.CONTAINER_REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
          file: ./Dockerfile
          context: ./

  deploy:
    runs-on: ubuntu-18.04
    needs: build
  
    steps:
      - name: Set repository name to env
        run: | 
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_ENV

      # - name: Confirm if env have REPOSITORY_NAME
      #   run: |
      #     echo ${{ env.REPOSITORY_NAME }}

      - name: Azure Login using OIDC
        uses: azure/login@v1
        with:
          # creds: ${{ secrets.CONTAINERAPPSALBUMUI_AZURE_CREDENTIALS }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Add a step
      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az extension add --upgrade --name containerapp
            az containerapp registry set \
              --name ${{ env.CONTAINERAPP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
              --server ${{ env.CONTAINER_REGISTRY }} \
              --username  ${{ secrets.CONTAINER_REGISTRY_USERNAME }} \
              --password ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
            az containerapp ingress enable \
              --name ${{ env.CONTAINERAPP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
              --target-port 3000 \
              --type external
            az containerapp update \
              --name ${{ env.CONTAINERAPP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
              --container-name ${{ env.REPOSITORY_NAME }} \
              --image ${{ env.CONTAINER_REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
              # Add env for FrontEnd App only
              # --set-env-vars API_BASE_URL=${{ env.API_BASE_URL }}
